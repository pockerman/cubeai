cmake_minimum_required(VERSION 3.6 FATAL_ERROR)

SET(EXECUTABLE  example_7)
SET(SOURCE ${EXECUTABLE}.cpp)


# find Boost
FIND_PACKAGE(Boost 1.65.0 REQUIRED)
SET(Boost_USE_SHARED_LIBS ON)

# find OpenBLAS
FIND_PACKAGE(BLAS REQUIRED)


LIST(APPEND CMAKE_PREFIX_PATH /home/alex/MySoftware/libtorch)
FIND_PACKAGE(Torch REQUIRED CONFIG)


SET(CMAKE_CXX_COMPILER g++)
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED True)
SET(CMAKE_C_COMPILER gcc)
SET(CMAKE_CXX_FLAGS "-g -pthread -fopenmp -fPIC")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")

INCLUDE_DIRECTORIES(/home/alex/MySoftware/blaze-3.8/install/include)
INCLUDE_DIRECTORIES(${BOOST_INCLUDEDIR})
INCLUDE_DIRECTORIES(/home/alex/MySoftware/nlohman_json/install/include)

INCLUDE_DIRECTORIES(${BLAZE_INCL_DIR})
INCLUDE_DIRECTORIES(${BOOST_INCLUDEDIR})
INCLUDE_DIRECTORIES(${TORCH_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(/home/alex/qi3/cubeAI/include/)
INCLUDE_DIRECTORIES(/home/alex/qi3/cubeAI/gymcpp/src)


LINK_DIRECTORIES(${CMAKE_INSTALL_PREFIX})
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
LINK_DIRECTORIES(/home/alex/qi3/cubeAI/gymcpp/install/)

ADD_EXECUTABLE(${EXECUTABLE} ${SOURCE})

TARGET_LINK_LIBRARIES(${EXECUTABLE} cubeailib)
TARGET_LINK_LIBRARIES(${EXECUTABLE} ${TORCH_LIBRARIES})
TARGET_LINK_LIBRARIES(${EXECUTABLE} pthread)
TARGET_LINK_LIBRARIES(${EXECUTABLE} openblas)
TARGET_LINK_LIBRARIES(${EXECUTABLE} gymfcpplib)
TARGET_LINK_LIBRARIES(${EXECUTABLE} python3.8)
TARGET_LINK_LIBRARIES(${EXECUTABLE} boost_python38)
TARGET_LINK_LIBRARIES(${EXECUTABLE} boost_system)
TARGET_LINK_LIBRARIES(${EXECUTABLE} boost_numpy38)
